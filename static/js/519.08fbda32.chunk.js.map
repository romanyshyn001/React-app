{"version":3,"file":"static/js/519.08fbda32.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/profile/Myposts/ProfileInfo/ProfileInfo.module.css?1143","components/profile/Myposts/ProfileInfo/ProfileStatus.jsx","components/profile/Myposts/ProfileInfo/ProfileStatusWithHook.jsx","components/profile/Myposts/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/profile/Myposts/MyPosts.module.css?6bab","webpack://my-app/./src/components/profile/Myposts/Post/Post.module.css?00cf","components/profile/Myposts/Post/Post.jsx","components/profile/Myposts/Post/PostForm.jsx","components/profile/Myposts/MyPosts.jsx","components/profile/Myposts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/Myposts/ProfileInfo/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"images\":\"ProfileInfo_images__oNOyb\",\"description\":\"ProfileInfo_description__v4fTW\"};","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../../Preloader/Preloader\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  };\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState((state) => ({\r\n      editMode: false,\r\n    }));\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n\r\n  onStatusChange(event) {\r\n    this.setState({\r\n      status: event.target.value,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        {!this.state.editMode ? (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode.bind(this)}>\r\n              {this.props.status || \"-----\"}\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <input\r\n              onBlur={this.deactivateEditMode.bind(this)}\r\n              value={this.state.status}\r\n              autoFocus={true}\r\n              onChange={this.onStatusChange.bind(this)}\r\n            ></input>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activeMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivatedEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activeMode}>{props.status || \"-----\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivatedEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../../Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = ({ profile, updateStatus, status }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.description}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks updateStatus={updateStatus} status={status} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__r8ALc\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__8I1r8\",\"images\":\"Post_images__ZjXMD\",\"post\":\"Post_post__Yj4gM\"};","import s from './Post.module.css';\r\nimport ava from './ava.png'\r\nimport React from 'react';\r\n\r\nconst Post = (props) => {\r\n        \r\n   return (\r\n      <div className={s.item}>\r\n         <img className={s.images} src={ava} alt='avatar'></img> \r\n            {props.message}\r\n         <div>\r\n            <span>like {props.likesCount}</span>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from \"react\"\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport s from './Post.module.css'\r\n\r\nconst ProfilePostForm = (props) => {\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      newPostText: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      newPostText: Yup.string()\r\n      .max(20, 'Maximum 20 characters')\r\n      .min(2, 'Minimun characters 2')\r\n      .required('Required'),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      props.onPostChange(values)\r\n      resetForm('')\r\n    }\r\n  })\r\n\r\n  return (\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <textarea \r\n          id='newPostText'\r\n          name='newPostText'\r\n          type='text'\r\n          value={ formik.values.newPostText } \r\n          onChange={ formik.handleChange}\r\n        />\r\n        { formik.touched.newPostText && formik.errors.newPostText\r\n        ? (<div className={s.post}>{formik.errors.newPostText}</div>)\r\n        : null  \r\n        }\r\n\r\n        <button type='submit'>Add post</button>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default ProfilePostForm","import s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport ProfilePostForm from \"./Post/PostForm\";\r\nimport { PureComponent } from \"react\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => (\r\n      <Post message={p.message} likesCount={p.likesCount} key={p.id} />\r\n    ));\r\n\r\n  let onPostChange = (values) => {\r\n    console.log(values.newPostText);\r\n    props.updateNewPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postBlock}>\r\n      <h3>Myposts</h3>\r\n      <div>\r\n        <ProfilePostForm onPostChange={onPostChange} />\r\n      </div>\r\n      <div className={s.posts}>{postElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostCreator, updateNewPostTextCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText\r\n   }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      // addNewPost: () => {\r\n      //    dispatch(addPostCreator())\r\n      // },\r\n      updateNewPost: (body) => {\r\n         dispatch(updateNewPostTextCreator(body))\r\n      }\r\n   }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from './Myposts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './Myposts/MyPostsContainer'\r\nimport React from 'react';\r\n\r\nconst Profile = (props) => {\r\n   return (\r\n      <div >\r\n         <ProfileInfo profile={props.profile} {...props}/> \r\n         <MyPostsContainer  />\r\n      </div>\r\n   )\r\n \r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"../../Profile\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\"\r\nimport { withAuthNavigate } from \"../../../HOC/withAuthRedirect\";\r\nimport { compose } from 'redux'\r\n\r\n//Wrapper function\r\nfunction withRouter(Component) {\r\n   function ComponentWithRouterProps(props){\r\n      let location = useLocation()\r\n      let navigate = useNavigate()\r\n      let params = useParams()\r\n         return (\r\n            <Component \r\n               {...props}\r\n               router={{location, navigate, params}}\r\n            />\r\n      )\r\n   }\r\n    return ComponentWithRouterProps\r\n}\r\n\r\nclass ProfileContainer extends React.Component {  \r\n   componentDidMount(){\r\n   let userId = this.props.router.params.userId \r\n   if(!userId){\r\n      userId = 22985\r\n   }\r\n   this.props.getUserProfile(userId)\r\n   this.props.getStatus(userId)\r\n}\r\n\r\nrender () {\r\n         return (\r\n            <Profile {...this.props} \r\n               profile={this.props.profile}\r\n            />\r\n      )\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status\r\n})\r\nexport default compose(\r\n   connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n   withRouter,\r\n   withAuthNavigate\r\n)(ProfileContainer)\r\n\r\n"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","target","value","onBlur","updateStatus","autoFocus","profile","className","s","src","photos","large","ProfileStatusWithHook","Preloader","ava","alt","message","likesCount","formik","useFormik","initialValues","newPostText","validationSchema","Yup","max","min","required","onSubmit","values","resetForm","onPostChange","handleSubmit","id","name","type","handleChange","touched","errors","postElements","posts","reverse","map","p","console","log","updateNewPost","connect","state","profilePage","dispatch","body","updateNewPostTextCreator","MyPosts","ProfileContainer","userId","this","router","params","getUserProfile","getStatus","compose","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate"],"sourceRoot":""}