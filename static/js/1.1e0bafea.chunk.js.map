{"version":3,"sources":["components/Dialogs/Dialogs.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/HOC/withAuthRedirect.tsx","assets/images/avaMessage.png","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/FormMessage.tsx","components/Dialogs/Dialog.tsx","components/Dialogs/DialogContainer.tsx"],"names":["module","exports","chat","chatItems","images","messages","dialogPost","btn","dialogMsg","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsForNavigate","state","isAuth","auth","withAuthNavigate","Component","connect","props","restProps","react_default","a","createElement","react_router","to","__webpack_require__","p","ChatItem","path","id","className","s","item","src","avaMessage","alt","react_router_dom","name","Message","message","AddMessageForm","_ref","sendDialogText","formik","useFormik","initialValues","addDialogPost","validationSchema","Yup","max","min","required","onSubmit","_ref2","_ref3","resetForm","handleSubmit","createField","handleChange","handleBlur","values","touched","errors","es_button","type","htmlType","Dialogs","dialogPage","dialogsElems","dialogsData","map","dialog","DialogItem_ChatItem","messagesElems","messageData","messageItem","Dialogs_Message_Message","FormMessage_AddMessageForm","compose","dialogText","newDialogPost","objectSpread","actions"],"mappings":"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","file":"static/js/1.1e0bafea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Dialogs_chat__7UGxi\",\"chatItems\":\"Dialogs_chatItems___niUE\",\"images\":\"Dialogs_images__1Pd54\",\"messages\":\"Dialogs_messages__3GRGD\",\"dialogPost\":\"Dialogs_dialogPost__2NfSj\",\"btn\":\"Dialogs_btn__2EZvW\",\"dialogMsg\":\"Dialogs_dialogMsg__3tVy1\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\nlet mapStateToPropsForNavigate = (state: AppStateType) => ({\r\n   isAuth: state.auth.isAuth\r\n} as MapPropsType)\r\n\r\ntype MapPropsType = {\r\n   isAuth: boolean\r\n}\r\ntype DispatchPropsType = {\r\n}\r\nexport function withAuthNavigate(Component: React.ComponentType) {\r\n\r\n   const NavigateComponent: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n      let { isAuth, ...restProps } = props\r\n\r\n      if (!isAuth)\r\n\r\n         return <Navigate to=\"/Login\" />\r\n      return <Component {...restProps} />\r\n   }\r\n\r\n\r\n   let ConnectedAuthNavigateComponent = connect<MapPropsType, {}, {}, AppStateType>(mapStateToPropsForNavigate)(NavigateComponent)\r\n   return ConnectedAuthNavigateComponent\r\n}","module.exports = __webpack_public_path__ + \"static/media/avaMessage.6429af1b.png\";","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport avaMessage from \"./../../../assets/images/avaMessage.png\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n  name: string\r\n  id: number\r\n}\r\nconst ChatItem = (props: PropsType) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.item}>\r\n      <img className={s.images} src={avaMessage} alt=\"avatar\"></img>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ChatItem };\r\n","import s from './../Dialogs.module.css'\r\nimport React from 'react';\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\nconst Message = (props: PropsType) => {\r\n    return (\r\n        <div className={s.messages}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { createField } from \"../common/FormsControls/FormsControl\";\r\nimport { Button } from \"antd\";\r\n\r\nexport type NewMessageFormType = {\r\n  addDialogPost: string;\r\n};\r\ntype PropsType = {\r\n  sendDialogText: (messageText: string) => void;\r\n};\r\n\r\nexport const AddMessageForm: React.FC<PropsType> = ({\r\n  sendDialogText,\r\n}: PropsType) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      addDialogPost: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      addDialogPost: Yup.string()\r\n        .max(20, \"Maximum 20 characters\")\r\n        .min(2, \"Minimun characters 2\")\r\n        .required(\"Required\"),\r\n    }),\r\n    onSubmit: ({ addDialogPost }: NewMessageFormType, { resetForm }) => {\r\n      sendDialogText(addDialogPost);\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className={s.dialogMsg} onSubmit={formik.handleSubmit}>\r\n      {createField(\r\n        \"addDialogPost\",\r\n        \"addDialogPost\",\r\n        \"text\",\r\n        formik.handleChange,\r\n        formik.handleBlur,\r\n        formik.values.addDialogPost\r\n      )}\r\n      {formik.touched.addDialogPost && formik.errors.addDialogPost ? (\r\n        <div className={s.dialogPost}>{formik.errors.addDialogPost}</div>\r\n      ) : null}\r\n      <Button type=\"primary\" htmlType=\"submit\" className={s.btn}>\r\n        {\" \"}\r\n        Send{\" \"}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n","import s from './Dialogs.module.css';\r\nimport React from 'react';\r\nimport { ChatItem } from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { AddMessageForm } from './FormMessage';\r\nimport { InitialStateType } from '../../redux/dialogReducer';\r\n\r\ntype OwnPropsType = {\r\n    dialogPage: InitialStateType;\r\n    sendDialogText: (messageText: string) => void\r\n}\r\n\r\nconst Dialogs: React.FC<OwnPropsType> = (props) => {\r\n\r\n    let state = props.dialogPage\r\n    let dialogsElems = state.dialogsData.map(dialog => <ChatItem name={dialog.name} id={dialog.id}  key={dialog.id}/>)\r\n    let messagesElems = state.messageData.map(messageItem => <Message message={messageItem.message} key={messageItem.id} />)\r\n\r\n    return (\r\n        <div className={s.chat}>\r\n            <div className={s.chatItems}>\r\n                {dialogsElems}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElems}\r\n                <div>\r\n                    <AddMessageForm sendDialogText={props.sendDialogText} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { actions, } from \"../../redux/dialogReducer\";\r\nimport Dialogs from \"./Dialog\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthNavigate } from \"../HOC/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    dialogPage: state.dialogPage,\r\n    dialogText: state.dialogPage.newDialogPost,\r\n  };\r\n};\r\n\r\n// ADD TO COMPOSE \r\n//withAuthNavigate\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { ...actions },), withAuthNavigate\r\n)(Dialogs);\r\n"],"sourceRoot":""}